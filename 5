1//
vector < int > separateNegativeAndPositive(vector < int > & nums) {
	
    // Sort the given array in ascending order.
    sort(nums.begin(), nums.end());

    return nums;
}


2//
vector < int > separateNegativeAndPositive(vector < int > & nums) {

    // 'j' stores the index of the leftmost positive element.
    int j = 0;

    for (int i = 0; i < nums.size(); i++) {

        if (nums[i] < 0) {

            // Current element is negative.
            if (i != j) {

                // Swap the current element with the leftmost positive element.
                swap(nums[i], nums[j]);
            }

            ++j;
        }
    }

    return nums;
}

3/// using two pointer

vector < int > separateNegativeAndPositive(vector < int > & nums) {

    // Create two pointers- "LEFT" and "RIGHT".
    int left = 0;
    int right = nums.size() - 1;

    while (left < right) {

        if (nums[left] < 0 && nums[right] < 0) {

            // Case 1: Both the pointers point to negative elements.
            ++left;
        } 
        else if (nums[left] >= 0 && nums[right] >= 0) {
            
            // Case 2: Both the pointers point to positive elements.
            --right;
        } 
        else if (nums[left] >= 0 && nums[right] < 0) {

            // Case 3: "LEFT" points to positive element and "RIGHT" points to negative element.
            swap(nums[left], nums[right]);
            ++left;
            --right;
        } 
        else {

            // Case 4: "LEFT" points to negative element and "RIGHT" points to positive element.
            ++left;
            --right;
        }

    }

    return nums;
}
